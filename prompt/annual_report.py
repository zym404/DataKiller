from langchain.prompts import PromptTemplate
from langchain_core.output_parsers import JsonOutputParser
from output_parser.annual_report import AnnualReportLetter
# query_1_1 = '''
# 证券交易所的年报问询函问询了公司年报中的一些重要信息，包括公司的经营情况、财务状况、内部控制、公司治理等方面。
# 年报问询函的结构是由一个个问询问题组成，每一个分点对应一个问询问题，会用形如“1.”的序号标注。
# 每个问询问题中，包括问询问题的内容和补充披露两个部分
# 以下文本是{inquiry_letter}，你需要将年报问询函进行结构化信息抽取，整理成json的格式输出
# json对象，必须有这些字段: 问询问题内容、问询问题概括、补充披露、问询科目、问询机构、公司名称、证券代码、公告日期、回复截止日期。
# 注意：文本是由pdf解析器解析而来，故字符与字符之间存在不必要的空格，请不要输出这些空格

# 请不要输出和json格式无关的文本，遇到查询不到请填写"未知"
# Think step by step
# '''

# query_1 = '''
# 证券交易所问询函的结构为总分结构：先总述一个"大的问询事项"，再分述"需要公司说明的问询问题"。在每个"问询问题"中，先总述"问询问题的背景"，再分述每个问题"需要问询公司的具体方面"
# 以下文本是{inquiry_letter}，你需要将问询函按照"问询问题"字段整理成json的格式输出，json对象的数量和问询问题的数量保持一致
# 下面是你要做的步骤
# 0. 创建一个json对象，必须有这些字段: 问询问题、问询问题背景、需要问询公司的具体方面、问询函主题、问询机构、函件类别、公司名称、证券代码、公告日期、几日内回复、截止到哪天之前回复。
# 1. 总结一下**整个文本**的主旨概要，存入"问询函主题"字段
# 2. 将函件按照问询函结构拆分成两部：大的问询事项和需要公司说明的问询问题
# 3. 总结大的问询事项的主要内容，存入"问询问题"字段
# 4. 将需要公司说明的问询问题的部分拆分成具体的问询问题
# 5. 对每个问询问题进行拆分，再拆分出问询问题背景和需要问询公司的具体方面，
# 6. 把问询问题背景存入"问询问题背景"字段
# 7. 对需要问询公司的具体方面继续拆分，拆分成一个list，存入"需要问询公司的具体方面"字段
# 8. 从整个问询函中查询问询机构、函件类别、公司名称、证券代码、公告日期、几日内回复、截止到哪天之前回复，存入相应的字段。注意：对于上海证券交易的问询函，“截至到哪天之前回复”字段填“/”；对于深圳证券交易的问询函，“几日内回复”字段填“/”

# 注意：文本是由pdf解析器解析而来，故字符与字符之间存在不必要的空格，请不要输出这些空格
# 请不要输出和json格式无关的文本，遇到查询不到请填写"未知"
# Think step by step
# '''

annual_report_prompt_template = """
你是一个分析财务报表的专家,下面是一封年报问询函
证券交易所的年报问询函问询了公司年报中的一些重要信息，包括公司的经营情况、财务状况、内部控制、公司治理等方面。
年报问询函的结构是由一个个问询要点组成，每一个分点对应一个问询要点，会用形如“1.”的序号标注。
每个问询要点中，包括"问询问题的内容"和"补充说明"两个部分
以下文本是{inquiry_letter_name}，你需要将年报问询函进行结构化信息抽取，整理成json的格式输出
模板如下所示
```json
{{
    "列表": \[
        {{
            "问询问题内容": "问题内容1",
            "问询问题概括": "问题概括1",
            "补充说明": [
                "要点1的补充说明(1)",
                "要点1的补充说明(2)",
            ]

        }},
        {{
            "问询问题内容": "问题内容2",
            "问询问题概括": "问题概括2",
            "补充说明": [
                "要点2的补充说明(1)",
                "要点2的补充说明(2)",
            ]
        }},
    ]
    "问询机构": "A证券交易所",
    "函件标题": "函件的标题"
    "公司名称": "公司A",
    "公告日期": "YYYY年MM月DD日",
    "回复截止日期": "YYYY年MM月DD日"
}}
```
你需要先从问询函中按照形如"1."的编号捕捉所有的问询要点，
然后找出问询要点的问询问题，将问询问题概括成**词语**或**短语**放入"问询问题概括"
再按照形如"(1)"的编号捕捉补充说明，补充说明部分一般会有“请你公司发表意见”、“请说明”、“请补充”、“请披露”等字样。
最后从整个文本找出公司名称、函件标题、公告日期、问询机构、回复截止日期
注意：文本是由pdf解析器解析而来，故字符与字符之间存在不必要的空格，请不要输出这些空格
请不要输出和json格式无关的文本，输出请用中文，遇到查询不到请填写"未知"
Think step by step
------
```{context}```
------
{format_instructions}
"""
# 输出的json文本必须有以下关键字: 问询问题内容、问询问题概括、补充说明、问询机构、公司名称、公告日期、回复截止日期。
## 用于对格式化prompt

annual_report_parser = JsonOutputParser(pydantic_object=AnnualReportLetter)  

ANNUAL_REPORT_PROMPT = PromptTemplate(
    template=annual_report_prompt_template, 
    input_variables=["inquiry_letter_name", "context"],
    partial_variables={"format_instructions":annual_report_parser.get_format_instructions()}

)




