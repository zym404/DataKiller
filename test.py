import os
os.chdir('DataKiller')
from core.qa_chain_qianfan import DocChatter
import json
import re


# query = '''
# 以下文本是{inquiry_letter}，请将内容按照监管问题的要点整理成json的格式输出
# json的关键字只有以下这几个:监管问题、公司答复、涉及财报科目、涉及金额、公司名称、证券代码、公告日期。
# 注意：文本是由pdf解析器解析而来，故字符与字符之间存在不必要的空格，请不要输出这些空格
# 请不要输出和json格式无关的文本
# '''

query = '''
证券交易所问询函的结构为总分结构：先总述一个"大的问询事项"，再分述"需要公司说明的监管问题"。在每个"监管问题"中，先总述"监管问题的背景"，再分述每个问题"需要问询公司的具体方面"
以下文本是{inquiry_letter}，请先将函件按照问询函结构拆分成两部：大的问询事项和需要公司说明的监管问题
总结大的问询事项的主要内容，然后再将需要公司说明的监管问题的部分拆分成具体的监管问题
然后对每个监管问题进行拆分，再拆分出监管问题背景和需要问询公司的具体方面，
接着对需要问询公司的具体方面继续拆分，拆分成一个list
最后将结果按照"监管问题"字段整理成json的格式输出
每个json对象必须有以下几点:监管问题、监管问题背景、需要问询公司的具体方面、问询事项、问询机构、函件类别、公司名称、证券代码、公告日期。
遇到查询不到请填写"未知"
注意：文本是由pdf解析器解析而来，故字符与字符之间存在不必要的空格，请不要输出这些空格
请不要输出和json格式无关的文本
Think step by step
'''

import pandas as pd
# txt = DocChatter.GptRagQuery(top_n=5,query=query)   
df = DocChatter.StructualQuery(query=query)
df.to_excel('test.xlsx')


# query ='''
# 将贵人鸟问询函内容整理成Python字典的格式输出。
# 字典的关键字只有以下这几个:公司名称、证券代码、公告日期、监管问题、公司答复、涉及财报科目，涉及金额。

# 请不要输出与Python字典无关的回答

# ```{
#   "公司名称": ["公司A","公司A"],
#   "证券代码": ["公司A代码","公司A代码"],
#   "公告日期": ["公司A公告日期","公司A公告日期"],
#   "监管问题": ["公司A监管问题1","公司A监管问题2"],
#   "公司答复": ["公司A答复1","公司A答复2"],
  
  # "涉及财报科目": [
  #   "科目1",
  #   "科目2"
  # ],
  # "涉及金额": [
  #   "金额1",
  #   "金额2"
  # ]
# }
# ```
